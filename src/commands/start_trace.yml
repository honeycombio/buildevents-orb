description: |
  start_trace should be run in a job all on its own at the very beginning of
  a build. This job initializes the buildevents config, downloads the
  buildevents binary, and otherwise gets the build environment ready for the
  rest of the jobs.
steps:
  - run:
      name: setup honeycomb buildevents and start trace
      command: |
        # set up our working environment and timestamp the trace
        mkdir -p ~/project/bin/be-linux-x86_64 ~/project/bin/be-linux-aarch64 ~/project/bin/be-darwin-arm64/ /tmp/buildevents/
        date +%s > /tmp/buildevents/build_start
  - run:
      name: downloading buildevents executables
      command: |
        BASE_URL=https://github.com/honeycombio/buildevents/releases/download/v0.16.0
        curl -q -L -o ~/project/bin/be-linux-x86_64/buildevents ${BASE_URL}/buildevents-linux-amd64
        # Note: the URL says arm64, but the path on disk says aarch64
        # because that's a thing `uname` gives you.
        curl -q -L -o ~/project/bin/be-linux-aarch64/buildevents ${BASE_URL}/buildevents-linux-arm64
        curl -q -L -o ~/project/bin/be-darwin-arm64/buildevents ${BASE_URL}/buildevents-darwin-arm64
  - run:
      name: make them executable
      command: chmod 755 ~/project/bin/be*/buildevents
  - save_cache:
      key: buildevents-v0.16.0-2{{ .Environment.BUILDEVENTS_CACHE_VERSION }}
      paths:
        - ~/project/bin
  - run:
      name: report_step
      command: ~/project/bin/be-$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m)/buildevents step $(echo $CIRCLE_WORKFLOW_ID | sed 's/-//g') setup $(cat /tmp/buildevents/build_start) start_trace
